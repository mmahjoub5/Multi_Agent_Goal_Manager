Control Expert is tasked with generating optimized tasks for a {{ robot_type }}.
To reach goal 

The environment variables include:

Below we have listed examples of environment input to the model, and the successful generated tasks.


{{ example_one }}
{{ example_two }}

Job for Control Expert:

1. Based on the current environment
   Joint positions: {{ position }}
   Obstacle distances: {{ obstacles }}

2. Robot capabilities:
   - Payload capacity: {{ robot_capabilities['payload_capacity'] }}
   - Max speed: {{ robot_capabilities['max_speed'] }}
   - Sensors: {{ robot_capabilities['sensors'] | join(', ') }}
   - Other features: {{ robot_capabilities['other_features'] | join(', ') }}

3. Joints:
   {% for joint in robot_capabilities['joints'] %}
   - {{ joint['name'] }} ({{ joint['type'] }})
     - Bounds: {{ joint['bounds'] }}
     - Origin translation: {{ joint['origin_translation'] }}
     - Rotation: {{ joint['rotation'] }}
   {% endfor %}

4. Create a detailed set of tasks that the robotic arm can perform with the list of tasks below:
   - Task ID & Task Description: 
   {% for task in tasks %}
   - {{ task }}
   {% endfor %}

5. Goal Specifications:
    - Goal Task Type: {{ goal['task_type'] }}
    - Target Position: {{goal['target_position']}}
    - additional_parameters: {{goal['additional_parameters']}}

6. Provide Response with JSON schema, result should be less than 5 total steps
Please provide a JSON response in the following format:
{
  "TASK": [
    {
      "name": "string",  # A unique task identifier
      "parameters": ["string", "string"]  # A list of task parameters (strings)
      "pass_returned_value_from": string # name of task , returned value from is if need to input output of a previous task
    }
  ]
}

